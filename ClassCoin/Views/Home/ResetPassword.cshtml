@model ClassCoin.ViewModels.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset Password";
}
<div class="header py-7 py-lg-8" style="padding-top:20px !important; background:linear-gradient(87deg,#5e72e4 0,#172b4d 100%) !important">
    <div class="container">
        <div class="row">
            <div class="col-4"></div>
            <div class="col-4">
                <h1 class="text-lighter text-center" style="padding-bottom:20px;">@ViewBag.Title</h1>
            </div>
            <div class="col-4"></div>
        </div>
    </div>
    <div class="separator separator-bottom separator-skew zindex-100">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 3000 100" preserveAspectRatio="none meet" x="0" y="0" version="1.1">
            <polygon class="fill-secondary" style="stroke-width:5;stroke:#f8f9fe;" points="3000,0 3000,100 0,100" />
        </svg>
    </div>
</div>
<div class="container-fluid" style="margin-top:-8rem;">
    <div class="row">
        <div class="col"></div>
        <div class="col-3">
            <div class="card bg-secondary shadow border-0">
                <div class="card-body px-lg-5 py-lg-5">
                    <div class="text-center text-muted mb-4">
                        <small>Or sign in with credentials</small>
                    </div>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                    <form>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Code)
                        <span class="text-danger">@ViewBag.Message</span>
                        <div class="form-group mb-3">
                            <div class="input-group input-group-alternative">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="ni ni-email-83"></i>
                                    </span>
                                </div>
                                @Html.TextBoxFor(model => model.Email,
                                    htmlAttributes: new { @class = "form-control", @placeholder = "Email", @type="email" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group input-group-alternative">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="ni ni-lock-circle-open"></i>
                                    </span>
                                </div>
                                @Html.TextBoxFor(model => model.Password,
                                    htmlAttributes: new { @class = "form-control", @placeholder = "Password", @type = "password" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group input-group-alternative">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="ni ni-lock-circle-open"></i>
                                    </span>
                                </div>
                                @Html.TextBoxFor(model => model.ConfirmPassword,
                                    htmlAttributes: new { @class = "form-control", @placeholder = "Password", @type = "password" })
                            </div>
                        </div>
                        <div class="text-center">
                            <button class="btn btn-primary my-4" value="Landing" type="submit">Sign in</button>
                        </div>
                    </form>
                    }
                </div>
            </div>
        </div>
        <div class="col"></div>
    </div>
</div>



@using (Html.BeginForm("ResetPassword", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Reset your password.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Code)
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Reset" />
        </div>
    </div>
}